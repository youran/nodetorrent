const fs = require('fs');
const crypto = require('crypto');
const hash = crypto.createHash('sha1');
const bencode = require('bencode');

module.exports.parseTorrentFile = (filename, cb) => {
	fs.readFile(filename, (err, buf) => {
		if (err) throw err;
		bencode.decode(buf, (err, obj) => {
			var info = obj.info;

			if (err) throw err;
			if (!info) {
				cb(null, -1);
			}
			
			// calculate size for all files in torrent
			obj.totalBytes = calculateTotalBytes(info);

			// calculate info_hash
			bencode.encode(info, (err, data) => {
				if (err) throw err;
				obj.info_hash = calculateInfoHash(data);

				cb(null, obj);
			});
		});
	});
};

var calculateInfoHash = (data) => {
	hash.update(data);
	return hash.digest('latin1');
};

var calculateTotalBytes = (info) => {
	var total = 0;

	if (info.length) {	// single file mode
		total = info.length;
	} else if (info.files) {	// multiple file mode
		for (let file of info.files) {
			total += file.length;
		}
	} else {
		return -1;
	}

	return total;
};